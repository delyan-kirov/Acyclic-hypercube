language ESSENCE 2.4.0

given n : int
letting N be domain int(0..n-1)

find M : function (total) (N,N) --> N
find J : function (total) (N,N) --> N
find compliment : function (total) N --> N
find suprema : N
find infima : N
find C : function (total) (N,N) --> int(0..1)
find D : function (total) (N,N) --> int(0..1)

such that

$Associative
forAll i,j,k: N. M((i,M((j,k)))) = M((M((i,j)),k)),
forAll i,j,k: N. J((i,J((j,k)))) = J((J((i,j)),k)),

$Commutative
forAll i,j: N. M((i,j)) = M((j,i)),
forAll i,j: N. J((i,j)) = J((j,i)),

$Absorption
forAll i,j: N. M((i,J((i,j)))) = i,
forAll i,j: N. J((i,M((i,j)))) = i,

$Idempotent
forAll i: N. M((i,i)) = i,
forAll i: N. J((i,i)) = i,

$Identity
forAll i : N. M((suprema,i)) = i,
forAll i : N. J((infima,i)) = i,

$Distributive
forAll i,j,k : N. M((k,J((i,j)))) = J((M((i,k)), M((j,k)))),
forAll i,j,k : N. J((k,M((i,j)))) = M((J((i,k)), J((j,k)))),

$Compliment
forAll i: N. J((i,compliment(i))) = suprema,
forAll i: N. M((i,compliment(i))) = infima,

$Direction
forAll i,j:N. ((C((i,j)) = 1) /\ ((J((i,j)) = i) /\ !(i = j) /\ !(exists k : N. !(i = k) /\ !(j = k) /\ (J((i, k)) = i) /\ (J((k,j)) = k)))) \/
              (!(C((i,j)) = 1) /\ !((J((i,j)) = i) /\ !(i = j) /\ !(exists k : N. !(i = k) /\ !(j = k) /\ (J((i, k)) = i) /\ (J((k,j)) = k)))),

forAll i,j:N. ((C((i,j)) = 1) \/ (C((j,i)) = 1)) <-> ((D((i,j)) = 1) \/ (D((j,i)) = 1)),
forAll i,j:N. (D((i,j)) = 1) ->  (D((j,i)) = 0),
forAll i,j:N. (D((i,j)) = 1) -> (i > j),
forAll i:N. D((i,i)) = 0,

$Locked
infima = 0,

$$$$$$$$$$$$
exists i, j, l: N. !(l = i) /\ !(l = j) /\ !(i = j) /\
                    (forAll k:N. D((i,k)) = 0) /\ 
                    (forAll k:N. D((j,k)) = 0) /\ 
                    (forAll k:N. D((l,k)) = 0),

